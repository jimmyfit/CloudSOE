{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "policyScopeId": {
            "type": "string",
            "metadata": {
                "description": "The scope at which policies, relating to the cloud SOE, will be assigned."
            }
        },
        "workspaceId": {
            "type": "string",
            "metadata": {
                "description": "The Log Analytics Workspace where any data sources will be directed."
            }
        },
        "windowsSOEImageArray": {
            "type": "array",
            "metadata": {
                "description": "An array of all Windows SOE image IDs."
            },
            "defaultValue": []
        },
        "linuxSOEImageArray": {
            "type": "array",
            "metadata": {
                "description": "An array of all Linux SOE image IDs."
            },
            "defaultValue": []
        }
    },
    "variables": {
        "assignedBy": "CloudSOE Policy Baseline",
        "commonAssignmentParameters": {
            "assignedBy": {
                "value":"[variables('assignedBy')]"
            },
            "policyScopeId": {
                "value": "[parameters('policyScopeId')]"
            }
        },
        "policyDefinitions":[
            {
                "relativeUri": "policies/enable-automanage-profile/policy.template.json",
                "policyName": "enable-automanage-profile-based-on-tag"
            },
            {
                "relativeUri": "policies/tag-vm-resources/policy.template.json",
                "policyName": "tag-vm-resources"
            }
        ],
        "policyAssignments": [
            {
                "relativeUri": "initiatives/enable-azure-monitor-for-VMs/assign.cloudsoe.json",
                "parameters": {
                    "workspaceId": {
                        "value": "[parameters('workspaceId')]"
                    },
                    "windowsSOEImageArray": {
                        "value": "[parameters('windowsSOEImageArray')]"
                    },
                    "linuxSOEImageArray": {
                        "value": "[parameters('linuxSOEImageArray')]"
                    }
                }
            },
            {
                "relativeUri": "policies/enable-automanage-profile/assign.nonprod.json",
                "policyName": "enable-automanage-profile-based-on-tag",
                "parameters": {
                    "automanageAccount": {
                        "value": "[concat(subscription().id,'/resourcegroups/cloudsoeimagerg/providers/microsoft.automanage/accounts/cloudsoeautomanage')]"
                    }
                }
            },
            {
                "relativeUri": "policies/enable-automanage-profile/assign.prod.json",
                "policyName": "enable-automanage-profile-based-on-tag",
                "parameters": {
                    "automanageAccount": {
                        "value": "[concat(subscription().id,'/resourcegroups/cloudsoeimagerg/providers/microsoft.automanage/accounts/cloudsoeautomanage')]"
                    },
                    "policyDefinitionId": {
                        "value": ""
                    }
                }
            },
            {
                "relativeUri": "policies/tag-vm-resources/assign.soetag.json",
                "policyName": "tag-vm-resources",
                "parameters": {}
            },
            {
                "relativeUri": "policies/tag-vm-resources/assign.prodtag.json",
                "policyName": "tag-vm-resources",
                "parameters": {}
            }
        ]
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "name": "[concat('PolicyDefinitions-',variables('policyDefinitions')[copyIndex()]).policyName]",
            "location": "eastus",
            "copy": {
                "name": "Policy definition deployments",
                "count": "[length(variables('policyDefinitions'))]",
                "mode": "parallel"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[uri(deployment().properties.templateLink.uri, variables('policyDefinitions')[copyIndex()]).relativeUri]"
                },
                "parameters": {
                    "policyName": {
                        "value": "[variables('policyDefinitions')[copyIndex()].policyName]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "name": "[concat('PolicyAssignment-',copyIndex())]",
            "location": "eastus",
            "dependsOn": [
                "Policy definition deployments"
            ],
            "copy": {
                "name": "Policy assignment deployments",
                "count": "[length(variables('policyAssignments'))]",
                "mode": "parallel"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[uri(deployment().properties.templateLink.uri, variables('policyAssignments')[copyIndex()]).relativeUri]",
                    "parameters": "[if(contains(variables('policyAssignments')[copyIndex()],'policyName'),union(variables('commonAssignmentParameters'),variables('policyAssignments')[copyIndex()].parameters,createobject('policyDefinitionId',reference(concat('PolicyDefinitions-',variables('policyAssignments')[copyIndex()].policyName)).outputs.policyDefinitionId)),union(variables('commonAssignmentParameters'),variables('policyAssignments')[copyIndex()].parameters))]" //This block selectively merges three objects to form one parameters set for the new deployment. First is the commonAssignmentParameters variable which contains the parameters that need to be attached to all policy assignments. Second is the policyAssignment-specific under variables('policyAssignments')[copyIndex()].parameter. Thirdly is the optional policyDefinitionId, which is only necessary for custom policies (defined above) which do not have static policyDefinitionIds. This is derived from the combination of the output of the policyDefinition deployment, and the policyName optionally specified under variables('policyAssignments')[copyIndex()].
                }
            }
        },
        {
            "type": "Microsoft.Authorization/policyAssignments",
            "name": "[guid('55834165-d4ea-44b6-97a6-02974364eec8', '2', 'CloudSOEImageRG')]",
            "apiVersion": "2019-09-01",
            "location": "eastus",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "scope": "[parameters('policyScopeId')]",
                "policyDefinitionId": "/subscriptions/888352be-306d-489d-8e87-dacd675cdde7/providers/Microsoft.Authorization/policyDefinitions/55834165-d4ea-44b6-97a6-02974364eec8",
                "parameters":  {
                    "tagName": {
                        "value": "SOE"
                    },
                    "tagValue": {
                        "value": "True"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Authorization/policyAssignments",
            "name": "[guid('12794019-7a00-42cf-95c2-882eed337cc8')]",
            "apiVersion": "2019-09-01",
            "location": "eastus",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "scope": "[parameters('policyScopeId')]",
                "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/12794019-7a00-42cf-95c2-882eed337cc8"
            }
        }
    ]
}