{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "policyScopeId": {
            "type": "string",
            "metadata": {
                "description": "The scope at which policies, relating to the cloud SOE, will be assigned."
            }
        },
        "workspaceId": {
            "type": "string",
            "metadata": {
                "description": "The Log Analytics Workspace where any data sources will be directed."
            }
        },
        "windowsSOEImageArray": {
            "type": "array",
            "metadata": {
                "description": "An array of all Windows SOE image IDs."
            },
            "defaultValue": []
        },
        "linuxSOEImageArray": {
            "type": "array",
            "metadata": {
                "description": "An array of all Linux SOE image IDs."
            },
            "defaultValue": []
        }
    },
    "variables": {
        "assignedBy": "CloudSOE Policy Baseline",
        "commonAssignmentParameters": {
            "assignedBy": {
                "value":"[variables('assignedBy')]"
            },
            "policyScopeId": {
                "value": "[parameters('policyScopeId')]"
            }
        },
        "policyDefinitions":[
            {
                "relativeUri": "policies/enable-automanage-profile/policy.template.json",
                "customPolicyDefinitionName": "enable-automanage-profile-based-on-tag"
            },
            {
                "relativeUri": "policies/tag-vm-resources/policy.template.json",
                "customPolicyDefinitionName": "tag-vm-resources"
            },
            {
                "relativeUri": "policies/gc-windows-logon-banner/policy.template.json",
                "customPolicyDefinitionName": "gc-windows-logon-banner"
            }
        ],
        "policyAssignments": [
            {
                "relativeUri": "initiatives/enable-azure-monitor-for-vms/assign.cloudsoe.json",
                "assignmentName": "enable-azure-monitor-for-vms",
                "displayName": "Enable Azure Monitor for VMs",
                "definition": {
                    "builtinPolicyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/55f3eceb-5573-4f18-9695-226972c6d74a",
                    "roleDefinitionIds": [
                        "92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ]
                },
                "parameters": {
                    "workspaceId": {
                        "value": "[parameters('workspaceId')]"
                    },
                    "windowsSOEImageArray": {
                        "value": "[parameters('windowsSOEImageArray')]"
                    },
                    "linuxSOEImageArray": {
                        "value": "[parameters('linuxSOEImageArray')]"
                    }
                }
            },
            {
                "relativeUri": "initiatives/enable-guest-configuration/assign.cloudsoe.json",
                "assignmentName": "enable-guest-configuration",
                "displayName": "Install Guest Configuration prerequisites",
                "definition": {
                    "builtinPolicyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/12794019-7a00-42cf-95c2-882eed337cc8",
                    "roleDefinitionIds": [
                        "b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ]
                },
                "parameters": {}
            },
            {
                "relativeUri": "policies/enable-automanage-profile/assign.nonprod.json",
                "assignmentName": "enable-automanage-profile-nonprod",
                "displayName": "Enable Automanage for non-prod systems",
                "definition": {
                    "customPolicyDefinitionName": "enable-automanage-profile-based-on-tag",
                    "roleDefinitionIds": [
                        "b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ]
                },
                "parameters": {
                    "automanageAccount": {
                        "value": "[concat(subscription().id,'/resourcegroups/cloudsoeimagerg/providers/microsoft.automanage/accounts/cloudsoeautomanage')]"
                    },
                    "configurationProfileAssignment": {
                        "value": "Azure virtual machine best practices – Dev/test"
                    },
                    "TagName": {
                        "value": "Production"
                    },
                    "TagValue": {
                        "value": "False"
                    }
                }
            },
            {
                "relativeUri": "policies/enable-automanage-profile/assign.prod.json",
                "assignmentName": "enable-automanage-profile-prod",
                "displayName": "Enable Automanage for production systems",
                "definition":{
                    "customPolicyDefinitionName": "enable-automanage-profile-based-on-tag",
                    "roleDefinitionIds": [
                        "b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ]
                },
                "parameters": {
                    "automanageAccount": {
                        "value": "[concat(subscription().id,'/resourcegroups/cloudsoeimagerg/providers/microsoft.automanage/accounts/cloudsoeautomanage')]"
                    },
                    "configurationProfileAssignment": {
                        "value": "Azure virtual machine best practices – Production"
                    },
                    "TagName": {
                        "value": "Production"
                    },
                    "TagValue": {
                        "value": "True"
                    }
                }
            },
            {
                "relativeUri": "policies/tag-vm-resources/assign.soetag.json",
                "assignmentName": "tag-vm-resources-soe",
                "displayName": "Tag all SOE-image VMs as SOE",
                "definition": {
                    "customPolicyDefinitionName": "tag-vm-resources",
                    "roleDefinitionIds": [
                        "b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ]
                },
                "parameters": {
                    "tagName": {
                        "value": "SOE"
                    },
                    "tagValue": {
                        "value": "True"
                    }
                }
            },
            {
                "relativeUri": "policies/tag-vm-resources/assign.prodtag.json",
                "assignmentName": "tag-vm-resources-prod",
                "displayName": "Tag all deployed VMs as production by default",
                "definition": {
                    "customPolicyDefinitionName": "tag-vm-resources",
                    "roleDefinitionIds": [
                        "b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ]
                },
                "parameters": {
                    "tagName": {
                        "value": "Production"
                    },
                    "tagValue": {
                        "value": "True"
                    }
                }
            },
            {
                "relativeUri": "policies/gc-windows-logon-banner/assign.cloudsoe.json",
                "assignmentName": "gc-windows-logon-banner",
                "displayName": "Audit Windows OS logon banner text",
                "definition": {
                    "customPolicyDefinitionName": "gc-windows-logon-banner"
                },
                "parameters": {
                    "bannerTitle": {
                        "value": "Some title text"
                    },
                    "bannerText": {
                        "value": "Some text"
                    }
                }
            }
        ]
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "name": "[concat('PolicyDefinitions-',variables('policyDefinitions')[copyIndex()].customPolicyDefinitionName)]",
            "location": "eastus",
            "copy": {
                "name": "Policy definition deployments",
                "count": "[length(variables('policyDefinitions'))]",
                "mode": "parallel"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[uri(deployment().properties.templateLink.uri, variables('policyDefinitions')[copyIndex()].relativeUri)]"
                },
                "parameters": {
                    "policyName": {
                        "value": "[variables('policyDefinitions')[copyIndex()].customPolicyDefinitionName]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Authorization/policyAssignments",
            "name": "[variables('policyAssignments')[copyIndex()].assignmentName]",
            "apiVersion": "2019-09-01",
            "location": "eastus",
            "copy": {
                "name": "Policy assignments",
                "count": "[length(variables('policyAssignments'))]",
                "mode": "parallel"
            },
            "dependsOn":[
                "Policy definition deployments"
            ],
            //Not sure if this is necessary... "identity": "[variables('policyAssignments')[copyIndex()].identity]", //Todo: set this to if roledefinitionids gt zero, then system, else None. Toso: Populate with roleDefinitionIds or get from definition deployment
            "properties": {
                "scope": "[variables('commonAssignmentParameters').policyScopeId]",
                "policyDefinitionId": "[if(contains(variables('policyAssignments')[copyIndex()].definition,'builtinPolicyDefinitionId'), variables('policyAssignments')[copyIndex()].definition.builtinPolicyDefinitionId, reference(concat('PolicyDefinitions-',variables('policyAssignments')[copyIndex()].definition.customPolicyDefinitionName)).outputs.policyDefinitionId.value)]",
                "displayName": "[variables('policyAssignments')[copyIndex()].displayName]",
                "metadata": {
                    "assignedBy": "[variables('commonAssignmentParameters').assignedBy]"
                },
                "parameters": "[variables('policyAssignments')[copyIndex()].parameters]"
            }
        }
    ]
}